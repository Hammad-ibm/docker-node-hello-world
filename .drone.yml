pipeline:

  my-build:
    privileged: true
    image: docker:1.11
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
    commands:
      - docker build -t node-hello-world .
    when:
      branch: master
      event: push

  image_to_quay:
    image: docker:1.11
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
    commands:
      - docker login -u="ukhomeofficedigital+drone_demo" -p=${DOCKER_PASSWORD} quay.io
      - docker tag node-hello-world quay.io/ukhomeofficedigital/node-hello-world:${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/node-hello-world:${DRONE_COMMIT_SHA}
    when:
      branch: master
      event: push

#   image_to_artifactory:
#     image: docker:1.11
#     environment:
#       - DOCKER_HOST=tcp://127.0.0.1:2375
#     commands:
#       - docker login -u="regt-build-bot" -p=${DOCKER_ARTIFACTORY_PASSWORD} docker.digital.homeoffice.gov.uk
#       - docker tag node-hello-world docker.digital.homeoffice.gov.uk/ukhomeofficedigital/node-hello-world:${DRONE_COMMIT_SHA}
#       - docker push docker.digital.homeoffice.gov.uk/ukhomeofficedigital/node-hello-world:${DRONE_COMMIT_SHA}
#     when:
#       branch: master
#       event: push

  pr-builder:
    privileged: true
    image: docker:1.11
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
    commands:
      - docker build -t node-hello-world .
    when:
      event: pull_request

  deploy-to-prod:
    image: busybox
    commands:
      - /bin/echo hello prod
    when:
      environment: dev-induction
      event: deployment

  deploy:
    image: busybox
    commands:
      - /bin/echo hello ${ENV_NAME}
    when:
      environment: uat
      event: deployment

  first-step:
    image: busybox
    commands:
      - echo hello > test.txt
    when:
      branch: master
      event: push

  second-step:
    image: busybox
    commands:
      - cat test.txt
    when:
      branch: master
      event: push

  third-step:
    image: quay.io/ukhomeofficedigital/kd:v0.2.2
    commands:
      - env
    when:
      branch: master
      event: push

  predeploy_to_ci:
    image: plugins/git
    commands:
      - git clone https://github.com/UKHomeOffice/kube-node-hello-world.git
    when:
      branch: master
      event: push

  deploy_to_ci:
    image: quay.io/ukhomeofficedigital/kd:latest
    environment:
    commands:
      - |
        export KUBE_NAMESPACE=${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER}
        export KUBE_SERVER=${KUBE_SERVER_CI}
        export KUBE_TOKEN=${KUBE_TOKEN_CI}
        export MY_SECRET=eW8=

        kubectl create namespace ${KUBE_NAMESPACE} --server=${KUBE_SERVER} --insecure-skip-tls-verify=true --token=${KUBE_TOKEN}
        cd kube-node-hello-world

        cd kube
        kd --insecure-skip-tls-verify \
           --file example-secrets.yaml \
           --file example-deployment.yaml \
           --file example-service.yaml \
           --file example-ingress.yaml \
           --kube-server=${KUBE_SERVER} --insecure-skip-tls-verify=true --kube-token=${KUBE_TOKEN} --namespace=${KUBE_NAMESPACE}
    when:
      branch: master
      event: push

  notify:
    image: quay.io/ukhomeofficedigital/kd:latest
    commands:
      - |
        export KUBE_NAMESPACE=${DRONE_COMMIT_SHA}-${DRONE_BUILD_NUMBER}
        export KUBE_SERVER=${KUBE_SERVER_CI}
        export KUBE_TOKEN=${KUBE_TOKEN_CI}
        kubectl delete namespace ${KUBE_NAMESPACE} --server=${KUBE_SERVER} --insecure-skip-tls-verify=true --token=${KUBE_TOKEN}
    when:
      branch: master
      event: push
      status: [ success, failure ]

  predeploy_to_uat:
    image: plugins/git
    commands:
      - git clone https://${GITHUB_TOKEN}:x-oauth-basic@github.com/UKHomeOffice/kube-node-hello-world.git
    when:
      environment: dev-induction
      event: deployment

  deploy_to_uat:
    image: quay.io/ukhomeofficedigital/kd:v0.2.2
    environment:
      - KUBE_NAMESPACE=dev-induction
    commands:
      - cd kube-node-hello-world
      - ./deploy.sh
    when:
      environment: dev-induction
      event: deployment



  my-docker-compose:
    privileged: true
    image: docker/compose:1.8.1
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
    commands:
      - docker-compose build
    when:
      environment: compose
      event: deployment

  integration_tests:
    image: docker/compose:1.8.1
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
    commands:
      - docker-compose up -d
      - sleep 10
      - docker-compose exec -T web npm run ci
      - docker-compose stop
    when:
      environment: compose
      event: deployment

  image_to_quay:
    image: docker:1.11
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
    commands:
      - docker login -u="ukhomeofficedigital+drone_demo" -p=${DOCKER_PASSWORD} quay.io
      - docker tag node-hello-world quay.io/ukhomeofficedigital/node-hello-world:${DRONE_COMMIT_SHA}
      - docker push quay.io/ukhomeofficedigital/node-hello-world:${DRONE_COMMIT_SHA}
    when:
      environment: compose
      event: deployment


  kubernetes:
    image: docker:1.11
    privileged: true
    environment:
      - DOCKER_HOST=tcp://127.0.0.1:2375
    commands:
      # - mkdir -p /var/lib/kubelet
      # - wget https://github.com/kubernetes/kubernetes/releases/download/v1.4.6/kubernetes.tar.gz
      # - tar -xvf kubernetes.tar.gz
      # - tar -xvf kubernetes/server/kubernetes-server-linux-amd64.tar.gz
      # - cp kubernetes/server/bin/kubelet /var/lib/kubelet/
      - mkdir -p /var/lib/kubelet
      - mount --bind /var/lib/kubelet /var/lib/kubelet
      - mount --make-shared /var/lib/kubelet
      - mount --make-rshared /var/lib/kubelet
      - docker run -d --volume=/sys:/sys:rw --volume=/var/lib/docker/:/var/lib/docker:rw --volume=/var/lib/kubelet/:/var/lib/kubelet:rw,shared --volume=/var/run:/var/run:rw --net=host --pid=host --privileged --name=kubelet gcr.io/google_containers/hyperkube-amd64:v1.4.6 /hyperkube kubelet --hostname-override=127.0.0.1 --api-servers=http://localhost:8080 --config=/etc/kubernetes/manifests --cluster-dns=10.0.0.10 --cluster-domain=cluster.local --allow-privileged --v=2
    when:
      environment: kubernetes
      event: deployment

services:
  dind:
    image: docker:1.11-dind
    privileged: true
    command:
      - "-s"
      - "overlay"

